{"version":3,"sources":["ColorModeSwitcher.js","Overview.js","images/small-thumb.png","images/medium-thumb.png","images/large-thumb.png","TestDatasets.js","ReducedDataSize.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","aria-label","variant","color","marginLeft","onClick","icon","Overview","maxW","as","href","target","rel","spacing","TestDatasets","divider","borderColor","boxSize","src","smallThumb","alt","mediumThumb","largeThumb","datasetNames","ReducedDataSize","data","y","x","name","type","orientation","layout","plot_bgcolor","yaxis","title","xaxis","barmode","width","height","App","theme","textAlign","minH","p","justifySelf","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"mSAIaA,EAAoB,SAAAC,GAAU,IACjCC,EAAoBC,cAApBD,gBACFE,EAAOC,YAAkB,OAAQ,SACjCC,EAAaD,YAAkBE,IAAQC,KAE7C,OACE,cAAC,IAAD,aACEC,KAAK,KACLC,SAAS,KACTC,aAAA,oBAAyBP,EAAzB,SACAQ,QAAQ,QACRC,MAAM,UACNC,WAAW,IACXC,QAASb,EACTc,KAAM,cAACV,EAAD,KACFL,K,iBCQKgB,MAlBf,WACE,OACE,eAAC,IAAD,CAAKC,KAAK,QAAV,UACE,cAAC,IAAD,CAASC,GAAG,KAAKV,KAAK,KAAtB,sBACE,eAAC,IAAD,4EAAoE,cAAC,IAAD,CAAMI,MAAM,WAAWO,KAAK,qBAAqBC,OAAO,SAASC,IAAI,sBAArE,oCAApE,kEAA2P,cAAC,IAAD,CAAMT,MAAM,WAAWO,KAAK,uBAAuBC,OAAO,SAASC,IAAI,sBAAvE,2BAA3P,QAAiX,cAAC,IAAD,CAAMT,MAAM,WAAWO,KAAK,uBAAuBC,OAAO,SAASC,IAAI,sBAAvE,iCAAjX,gGAEA,uBACF,eAAC,IAAD,CAAaC,QAAS,EAAtB,UACE,cAAC,IAAD,iCACA,cAAC,IAAD,sDACA,cAAC,IAAD,wDACA,cAAC,IAAD,+BAEA,uBACF,eAAC,IAAD,uFAA+E,cAAC,IAAD,CAAMV,MAAM,WAAWO,KAAK,8BAA8BC,OAAO,SAASC,IAAI,sBAA9E,mBAA/E,eAA2M,cAAC,IAAD,CAAMT,MAAM,WAAWO,KAAK,yCAAyCC,OAAO,SAASC,IAAI,sBAAzF,kBAA3M,gC,SCvBS,MAA0B,wCCA1B,MAA0B,yCCA1B,MAA0B,wCCmD1BE,MArCf,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASL,GAAG,KAAKV,KAAK,KAAtB,2BACA,cAAC,IAAD,0EACA,eAAC,IAAD,CAAQgB,QAAS,cAAC,IAAD,CAAcC,YAAY,aAA3C,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASP,GAAG,KAAKV,KAAK,KAAtB,mBACE,eAAC,IAAD,CAAMW,KAAK,iJAAiJC,OAAO,SAASC,IAAI,sBAAhL,UACE,cAAC,IAAD,CAAOK,QAAQ,KAAKC,IAAKC,EAAYC,IAAI,oBACvC,cAAC,IAAD,CAAMX,GAAG,KAAT,oBAA2B,cAAC,IAAD,qCAC3B,cAAC,IAAD,CAAMA,GAAG,KAAT,uBAA8B,cAAC,IAAD,oCAEpC,cAAC,IAAD,CAAMN,MAAM,WAAWO,KAAK,sEAAsEC,OAAO,SAASC,IAAI,sBAAtH,uBAEF,eAAC,IAAD,WACE,cAAC,IAAD,CAASH,GAAG,KAAKV,KAAK,KAAtB,oBACE,eAAC,IAAD,CAAMW,KAAK,kJAAkJC,OAAO,SAASC,IAAI,sBAAjL,UACE,cAAC,IAAD,CAAOK,QAAQ,KAAKC,IAAKG,EAAaD,IAAI,qBACxC,cAAC,IAAD,CAAMX,GAAG,KAAT,oBAA2B,cAAC,IAAD,qCAC3B,cAAC,IAAD,CAAMA,GAAG,KAAT,uBAA8B,cAAC,IAAD,oCAEpC,cAAC,IAAD,CAAMN,MAAM,WAAWO,KAAK,0DAA0DC,OAAO,SAASC,IAAI,sBAA1G,uBAEF,eAAC,IAAD,WACE,cAAC,IAAD,CAASH,GAAG,KAAKV,KAAK,KAAtB,mBACE,eAAC,IAAD,CAAMW,KAAK,0IAA0IC,OAAO,SAASC,IAAI,sBAAzK,UACE,cAAC,IAAD,CAAOK,QAAQ,KAAKC,IAAKI,EAAYF,IAAI,oBACvC,cAAC,IAAD,CAAMX,GAAG,KAAT,oBAA2B,cAAC,IAAD,qCAC3B,cAAC,IAAD,CAAMA,GAAG,KAAT,uBAA8B,cAAC,IAAD,uCAEpC,cAAC,IAAD,CAAMN,MAAM,WAAWO,KAAK,0DAA0DC,OAAO,SAASC,IAAI,sBAA1G,8B,iBCpCJW,EAAe,CAAC,QAAS,SAAU,SAmD1BC,MAjDf,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASf,GAAG,KAAKV,KAAK,KAAtB,+BACE,cAAC,IAAD,CACA0B,KAAM,CACJ,CACEC,EAAGH,EACHI,EAAG,CAAC,IAAK,GAAI,IACbC,KAAM,QACNC,KAAM,MACNC,YAAa,KAEf,CACEJ,EAAGH,EACHI,EAAG,CAAC,EAAK,GAAI,IACbC,KAAM,OACNC,KAAM,MACNC,YAAa,KAEf,CACEJ,EAAGH,EACHI,EAAG,CAAC,IAAK,GAAI,IACbC,KAAM,WACNC,KAAM,MACNC,YAAa,KAEf,CACEJ,EAAGH,EACHI,EAAG,CAAC,IAAK,GAAI,IACbC,KAAM,kBACNC,KAAM,MACNC,YAAa,KAEf,CACEJ,EAAGH,EACHI,EAAG,CAAC,IAAK,GAAI,IACbC,KAAM,sBACNC,KAAM,MACNC,YAAa,MAGfC,OAAS,CAAEC,aAAc,qBAAsBC,MAAO,CAAEC,MAAO,WAAaC,MAAO,CAAED,MAAO,aAAeE,QAAS,QAASC,MAAO,IAAKC,OAAQ,IAAKJ,MAAO,4CAE3J,eAAC,IAAD,6EAAqE,cAAC,IAAD,CAAM/B,MAAM,WAAWO,KAAK,qBAAqBC,OAAO,SAASC,IAAI,sBAArE,wBAArE,uBCPG2B,MA/Bf,WACE,OACE,cAAC,IAAD,CAAgBC,MAAOA,QAAvB,SACE,cAAC,IAAD,CAAKC,UAAU,SAASzC,SAAS,KAAjC,SACE,eAAC,IAAD,CAAM0C,KAAK,QAAQC,EAAG,EAAtB,UACE,cAAC,EAAD,CAAmBC,YAAY,aAC/B,cAAC,IAAD,CAASnC,GAAG,KAAKV,KAAK,MAAtB,8CACA,cAAC,IAAD,CAASU,GAAG,KAAKV,KAAK,KAAtB,sEACA,eAAC,IAAD,CAAQc,QAAS,GAAIE,QAAS,cAAC,IAAD,CAAcC,YAAY,aAAxD,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAASP,GAAG,KAAKV,KAAK,KAAtB,oDACA,cAAC,IAAD,uBAEF,eAAC,IAAD,WACE,cAAC,IAAD,CAASU,GAAG,KAAKV,KAAK,KAAtB,sDACA,cAAC,IAAD,uBAEF,eAAC,IAAD,WACE,cAAC,IAAD,CAASU,GAAG,KAAKV,KAAK,KAAtB,0BACA,cAAC,IAAD,kCC3BC8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCKMQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,eAAC,aAAD,WACE,cAAC,IAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjB,MAAK,SAAAkB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,YClH5B1B,M","file":"static/js/main.154b0744.chunk.js","sourcesContent":["import React from 'react';\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorModeSwitcher = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n","import {\n  Box,\n  Text,\n  Link,\n  Heading,\n  OrderedList,\n  ListItem,\n} from '@chakra-ui/react';\n\nfunction Overview() {\n  return (\n    <Box maxW=\"40rem\">\n      <Heading as=\"h3\" size=\"lg\">Overview</Heading>\n        <Text>Multi-scale, chunked, medical imaging volumes compressed with <Link color=\"teal.500\" href=\"https://blosc.org/\" target=\"_blank\" rel=\"noopener noreferrer\">next-generation codecs</Link> result in a better user experience on the web due to improved <Link color=\"teal.500\" href=\"https://web.dev/fid/\" target=\"_blank\" rel=\"noopener noreferrer\">interactivity</Link> and <Link color=\"teal.500\" href=\"https://web.dev/lcp/\" target=\"_blank\" rel=\"noopener noreferrer\">loading performance</Link>. These benefits originate from multiple properties of these next-generation file formats:\n      </Text>\n        <br/>\n      <OrderedList spacing={3}>\n        <ListItem>Reduced data size.</ListItem>\n        <ListItem>Progressive, low-to-high scale loading.</ListItem>\n        <ListItem>Parallel data fetching and decompression.</ListItem>\n        <ListItem>Data slicing.</ListItem>\n      </OrderedList>\n        <br/>\n      <Text>This page profiles the performance impact of these properties, comparing <Link color=\"teal.500\" href=\"https://nifti.nimh.nih.gov/\" target=\"_blank\" rel=\"noopener noreferrer\">NIFTI</Link> volumes to <Link color=\"teal.500\" href=\"https://zarr.readthedocs.io/en/stable/\" target=\"_blank\" rel=\"noopener noreferrer\">Zarr</Link> multi-scale pyramids.</Text>\n    </Box>\n  )\n}\nexport default Overview\n","export default __webpack_public_path__ + \"static/media/small-thumb.7bc46f9c.png\";","export default __webpack_public_path__ + \"static/media/medium-thumb.10fe9b8b.png\";","export default __webpack_public_path__ + \"static/media/large-thumb.57aa75f5.png\";","import {\n  Box,\n  Text,\n  Link,\n  Heading,\n  HStack,\n  StackDivider,\n  Image,\n} from '@chakra-ui/react';\n\nimport smallThumb from './images/small-thumb.png'\nimport mediumThumb from './images/medium-thumb.png'\nimport largeThumb from './images/large-thumb.png'\n\nfunction TestDatasets() {\n  return (\n    <Box>\n      <Heading as=\"h3\" size=\"lg\">Test datasets</Heading>\n      <Text>Three medical imaging volumes, varying in size, are tested.</Text>\n      <HStack divider={<StackDivider borderColor=\"gray.600\" />}>\n        <Box>\n          <Heading as=\"h5\" size=\"md\">Small</Heading>\n            <Link href=\"https://kitware.github.io/itk-vtk-viewer/app/?image=https://openimaging.github.io/demos/multi-scale-chunked-compressed/build/data/small.nii.gz\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <Image boxSize=\"sm\" src={smallThumb} alt=\"Small test data\"/>\n                <Text as=\"em\">Size: </Text><Text>160 x 192 x 192 voxels</Text>\n                <Text as=\"em\">Spacing: </Text><Text>1 x 1.33 x 1.33 mm</Text>\n            </Link>\n          <Link color=\"teal.500\" href=\"https://github.com/OpenImaging/miqa/tree/master/sample_data/1_type1\" target=\"_blank\" rel=\"noopener noreferrer\">Source</Link>\n        </Box>\n        <Box>\n          <Heading as=\"h5\" size=\"md\">Medium</Heading>\n            <Link href=\"https://kitware.github.io/itk-vtk-viewer/app/?image=https://openimaging.github.io/demos/multi-scale-chunked-compressed/build/data/medium.nii.gz\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <Image boxSize=\"sm\" src={mediumThumb} alt=\"Medium test data\"/>\n                <Text as=\"em\">Size: </Text><Text>256 x 320 x 192 voxels</Text>\n                <Text as=\"em\">Spacing: </Text><Text>0.9 x 0.9 x 0.9 mm</Text>\n            </Link>\n          <Link color=\"teal.500\" href=\"https://wiki.idoimaging.com/index.php?title=Sample_Data\" target=\"_blank\" rel=\"noopener noreferrer\">Source</Link>\n        </Box>\n        <Box>\n          <Heading as=\"h5\" size=\"md\">Large</Heading>\n            <Link href=\"https://kitware.github.io/itk-vtk-viewer/app/?image=https://data.kitware.com/api/v1/file/6012e33a2fa25629b91dc8b7/download/large.nii.gz\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <Image boxSize=\"sm\" src={largeThumb} alt=\"Large test data\"/>\n                <Text as=\"em\">Size: </Text><Text>512 x 512 x 370 voxels</Text>\n                <Text as=\"em\">Spacing: </Text><Text>0.71 x 0.71 x 0.75 mm</Text>\n            </Link>\n          <Link color=\"teal.500\" href=\"https://wiki.idoimaging.com/index.php?title=Sample_Data\" target=\"_blank\" rel=\"noopener noreferrer\">Source</Link>\n        </Box>\n      </HStack>\n    </Box>\n  )\n}\nexport default TestDatasets\n","import {\n  Box,\n  Text,\n  Heading,\n  Link,\n} from '@chakra-ui/react';\n\nimport Plot from 'react-plotly.js'\n\nconst datasetNames = ['Small', 'Medium', 'Large']\n\nfunction ReducedDataSize() {\n  return (\n    <Box>\n      <Heading as=\"h3\" size=\"lg\">Reduced data size</Heading>\n        <Plot\n        data={[\n          {\n            y: datasetNames,\n            x: [3.4, 13, 82],\n            name: 'Nifti',\n            type: 'bar',\n            orientation: 'h',\n          },\n          {\n            y: datasetNames,\n            x: [3.0, 11, 65],\n            name: 'Zarr',\n            type: 'bar',\n            orientation: 'h',\n          },\n          {\n            y: datasetNames,\n            x: [2.8, 11, 64],\n            name: 'Zarr Zip',\n            type: 'bar',\n            orientation: 'h',\n          },\n          {\n            y: datasetNames,\n            x: [3.5, 12, 75],\n            name: 'Zarr Multiscale',\n            type: 'bar',\n            orientation: 'h',\n          },\n          {\n            y: datasetNames,\n            x: [3.2, 12, 74],\n            name: 'Zarr Multiscale Zip',\n            type: 'bar',\n            orientation: 'h',\n          },\n        ]}\n          layout={ { plot_bgcolor: 'rgb(234, 234, 234)', yaxis: { title: 'Dataset' }, xaxis: { title: 'Size (MB)' }, barmode: 'group', width: 800, height: 480, title: 'Reduced Data Size <br> Lower is better'} }\n      />\n            <Text>The Nifti files have Zlib compression while the Zarr data have <Link color=\"teal.500\" href=\"https://blosc.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Blosc Zstd</Link> compression.</Text>\n    </Box>\n  )\n}\n\nexport default ReducedDataSize\n","import React from 'react';\nimport {\n  ChakraProvider,\n  Box,\n  Text,\n  VStack,\n  Grid,\n  Heading,\n  StackDivider,\n  theme,\n} from '@chakra-ui/react';\nimport { ColorModeSwitcher } from './ColorModeSwitcher';\n\nimport Overview from './Overview'\nimport TestDatasets from './TestDatasets'\nimport ReducedDataSize from './ReducedDataSize'\n\nfunction App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <Box textAlign=\"center\" fontSize=\"xl\">\n        <Grid minH=\"100vh\" p={3}>\n          <ColorModeSwitcher justifySelf=\"flex-end\" />\n          <Heading as=\"h1\" size=\"2xl\">Multi-scale, Chunked, Compressed</Heading>\n          <Heading as=\"h2\" size=\"lg\">Performance impact when loading medical imaging datasets</Heading>\n          <VStack spacing={10} divider={<StackDivider borderColor=\"gray.200\" />}>\n            <Overview/>\n            <TestDatasets/>\n            <ReducedDataSize/>\n            <Box>\n              <Heading as=\"h3\" size=\"lg\">Progressive, low-to-high scale loading</Heading>\n              <Text>Todo.</Text>\n            </Box>\n            <Box>\n              <Heading as=\"h3\" size=\"lg\">Parallel data fetching and decompression</Heading>\n              <Text>Todo.</Text>\n            </Box>\n            <Box>\n              <Heading as=\"h3\" size=\"lg\">Data slicing</Heading>\n              <Text>Todo.</Text>\n            </Box>\n          </VStack>\n        </Grid>\n      </Box>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}